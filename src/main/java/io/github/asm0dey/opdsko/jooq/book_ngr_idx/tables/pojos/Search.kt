/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.book_ngr_idx.tables.pojos


import io.github.asm0dey.opdsko.jooq.book_ngr_idx.tables.interfaces.ISearch

import java.time.LocalDateTime
import java.time.OffsetDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Search(
    override val id: Long? = null,
    override val path: String,
    override val name: String,
    override val date: LocalDateTime? = null,
    override val added: OffsetDateTime? = null,
    override val sequence: String? = null,
    override val sequenceNumber: Long? = null,
    override val lang: String? = null,
    override val zipFile: String? = null,
    override val seqid: Int? = null
): ISearch {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Search = other as Search
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.path != o.path)
            return false
        if (this.name != o.name)
            return false
        if (this.date == null) {
            if (o.date != null)
                return false
        }
        else if (this.date != o.date)
            return false
        if (this.added == null) {
            if (o.added != null)
                return false
        }
        else if (this.added != o.added)
            return false
        if (this.sequence == null) {
            if (o.sequence != null)
                return false
        }
        else if (this.sequence != o.sequence)
            return false
        if (this.sequenceNumber == null) {
            if (o.sequenceNumber != null)
                return false
        }
        else if (this.sequenceNumber != o.sequenceNumber)
            return false
        if (this.lang == null) {
            if (o.lang != null)
                return false
        }
        else if (this.lang != o.lang)
            return false
        if (this.zipFile == null) {
            if (o.zipFile != null)
                return false
        }
        else if (this.zipFile != o.zipFile)
            return false
        if (this.seqid == null) {
            if (o.seqid != null)
                return false
        }
        else if (this.seqid != o.seqid)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.path.hashCode()
        result = prime * result + this.name.hashCode()
        result = prime * result + (if (this.date == null) 0 else this.date.hashCode())
        result = prime * result + (if (this.added == null) 0 else this.added.hashCode())
        result = prime * result + (if (this.sequence == null) 0 else this.sequence.hashCode())
        result = prime * result + (if (this.sequenceNumber == null) 0 else this.sequenceNumber.hashCode())
        result = prime * result + (if (this.lang == null) 0 else this.lang.hashCode())
        result = prime * result + (if (this.zipFile == null) 0 else this.zipFile.hashCode())
        result = prime * result + (if (this.seqid == null) 0 else this.seqid.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Search (")

        sb.append(id)
        sb.append(", ").append(path)
        sb.append(", ").append(name)
        sb.append(", ").append(date)
        sb.append(", ").append(added)
        sb.append(", ").append(sequence)
        sb.append(", ").append(sequenceNumber)
        sb.append(", ").append(lang)
        sb.append(", ").append(zipFile)
        sb.append(", ").append(seqid)

        sb.append(")")
        return sb.toString()
    }
}
