/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.tables.records;


import io.github.asm0dey.opdsko.jooq.tables.Author;
import io.github.asm0dey.opdsko.jooq.tables.interfaces.IAuthor;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorRecord extends UpdatableRecordImpl<AuthorRecord> implements IAuthor {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>author.id</code>.
     */
    public AuthorRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>author.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>author.fb2id</code>.
     */
    public AuthorRecord setFb2id(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>author.fb2id</code>.
     */
    @Override
    public String getFb2id() {
        return (String) get(1);
    }

    /**
     * Setter for <code>author.first_name</code>.
     */
    public AuthorRecord setFirstName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>author.first_name</code>.
     */
    @Override
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>author.middle_name</code>.
     */
    public AuthorRecord setMiddleName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>author.middle_name</code>.
     */
    @Override
    public String getMiddleName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>author.last_name</code>.
     */
    public AuthorRecord setLastName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>author.last_name</code>.
     */
    @Override
    public String getLastName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>author.nickname</code>.
     */
    public AuthorRecord setNickname(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>author.nickname</code>.
     */
    @Override
    public String getNickname() {
        return (String) get(5);
    }

    /**
     * Setter for <code>author.added</code>.
     */
    public AuthorRecord setAdded(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>author.added</code>.
     */
    @Override
    public LocalDateTime getAdded() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IAuthor from) {
        setId(from.getId());
        setFb2id(from.getFb2id());
        setFirstName(from.getFirstName());
        setMiddleName(from.getMiddleName());
        setLastName(from.getLastName());
        setNickname(from.getNickname());
        setAdded(from.getAdded());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorRecord
     */
    public AuthorRecord() {
        super(Author.AUTHOR);
    }

    /**
     * Create a detached, initialised AuthorRecord
     */
    public AuthorRecord(Long id, String fb2id, String firstName, String middleName, String lastName, String nickname, LocalDateTime added) {
        super(Author.AUTHOR);

        setId(id);
        setFb2id(fb2id);
        setFirstName(firstName);
        setMiddleName(middleName);
        setLastName(lastName);
        setNickname(nickname);
        setAdded(added);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AuthorRecord
     */
    public AuthorRecord(io.github.asm0dey.opdsko.jooq.tables.pojos.Author value) {
        super(Author.AUTHOR);

        if (value != null) {
            setId(value.getId());
            setFb2id(value.getFb2id());
            setFirstName(value.getFirstName());
            setMiddleName(value.getMiddleName());
            setLastName(value.getLastName());
            setNickname(value.getNickname());
            setAdded(value.getAdded());
            resetChangedOnNotNull();
        }
    }
}
