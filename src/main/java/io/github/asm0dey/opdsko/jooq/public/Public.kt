/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.`public`


import io.github.asm0dey.opdsko.jooq.DefaultCatalog

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.author</code>.
     */
    val AUTHOR: io.github.asm0dey.opdsko.jooq.`public`.tables.Author get() = io.github.asm0dey.opdsko.jooq.`public`.tables.Author.AUTHOR

    /**
     * The table <code>public.book</code>.
     */
    val BOOK: io.github.asm0dey.opdsko.jooq.`public`.tables.Book get() = io.github.asm0dey.opdsko.jooq.`public`.tables.Book.BOOK

    /**
     * The table <code>public.book_author</code>.
     */
    val BOOK_AUTHOR: io.github.asm0dey.opdsko.jooq.`public`.tables.BookAuthor get() = io.github.asm0dey.opdsko.jooq.`public`.tables.BookAuthor.BOOK_AUTHOR

    /**
     * The table <code>public.book_genre</code>.
     */
    val BOOK_GENRE: io.github.asm0dey.opdsko.jooq.`public`.tables.BookGenre get() = io.github.asm0dey.opdsko.jooq.`public`.tables.BookGenre.BOOK_GENRE

    /**
     * The table <code>public.genre</code>.
     */
    val GENRE: io.github.asm0dey.opdsko.jooq.`public`.tables.Genre get() = io.github.asm0dey.opdsko.jooq.`public`.tables.Genre.GENRE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        io.github.asm0dey.opdsko.jooq.`public`.tables.Author.AUTHOR,
        io.github.asm0dey.opdsko.jooq.`public`.tables.Book.BOOK,
        io.github.asm0dey.opdsko.jooq.`public`.tables.BookAuthor.BOOK_AUTHOR,
        io.github.asm0dey.opdsko.jooq.`public`.tables.BookGenre.BOOK_GENRE,
        io.github.asm0dey.opdsko.jooq.`public`.tables.Genre.GENRE
    )
}
