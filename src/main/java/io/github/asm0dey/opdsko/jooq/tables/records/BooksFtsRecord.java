/*
 * opdsko
 * Copyright (C) 2022  asm0dey
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.tables.records;


import io.github.asm0dey.opdsko.jooq.tables.BooksFts;
import io.github.asm0dey.opdsko.jooq.tables.interfaces.IBooksFts;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BooksFtsRecord extends TableRecordImpl<BooksFtsRecord> implements Record2<String, String>, IBooksFts {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>books_fts.name</code>.
     */
    public BooksFtsRecord setName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>books_fts.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>books_fts.sequence</code>.
     */
    public BooksFtsRecord setSequence(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>books_fts.sequence</code>.
     */
    @Override
    public String getSequence() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return BooksFts.BOOKS_FTS.NAME;
    }

    @Override
    public Field<String> field2() {
        return BooksFts.BOOKS_FTS.SEQUENCE;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String component2() {
        return getSequence();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String value2() {
        return getSequence();
    }

    @Override
    public BooksFtsRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public BooksFtsRecord value2(String value) {
        setSequence(value);
        return this;
    }

    @Override
    public BooksFtsRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IBooksFts from) {
        setName(from.getName());
        setSequence(from.getSequence());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BooksFtsRecord
     */
    public BooksFtsRecord() {
        super(BooksFts.BOOKS_FTS);
    }

    /**
     * Create a detached, initialised BooksFtsRecord
     */
    public BooksFtsRecord(String name, String sequence) {
        super(BooksFts.BOOKS_FTS);

        setName(name);
        setSequence(sequence);
    }

    /**
     * Create a detached, initialised BooksFtsRecord
     */
    public BooksFtsRecord(io.github.asm0dey.opdsko.jooq.tables.pojos.BooksFts value) {
        super(BooksFts.BOOKS_FTS);

        if (value != null) {
            setName(value.getName());
            setSequence(value.getSequence());
        }
    }
}
