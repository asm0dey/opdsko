/*
 * opdsko
 * Copyright (C) 2022  asm0dey
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.tables.records;


import io.github.asm0dey.opdsko.jooq.tables.BookGenre;
import io.github.asm0dey.opdsko.jooq.tables.interfaces.IBookGenre;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookGenreRecord extends UpdatableRecordImpl<BookGenreRecord> implements Record2<Long, Long>, IBookGenre {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>book_genre.book_id</code>.
     */
    public BookGenreRecord setBookId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>book_genre.book_id</code>.
     */
    @Override
    public Long getBookId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>book_genre.genre_id</code>.
     */
    public BookGenreRecord setGenreId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>book_genre.genre_id</code>.
     */
    @Override
    public Long getGenreId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BookGenre.BOOK_GENRE.BOOK_ID;
    }

    @Override
    public Field<Long> field2() {
        return BookGenre.BOOK_GENRE.GENRE_ID;
    }

    @Override
    public Long component1() {
        return getBookId();
    }

    @Override
    public Long component2() {
        return getGenreId();
    }

    @Override
    public Long value1() {
        return getBookId();
    }

    @Override
    public Long value2() {
        return getGenreId();
    }

    @Override
    public BookGenreRecord value1(Long value) {
        setBookId(value);
        return this;
    }

    @Override
    public BookGenreRecord value2(Long value) {
        setGenreId(value);
        return this;
    }

    @Override
    public BookGenreRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IBookGenre from) {
        setBookId(from.getBookId());
        setGenreId(from.getGenreId());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookGenreRecord
     */
    public BookGenreRecord() {
        super(BookGenre.BOOK_GENRE);
    }

    /**
     * Create a detached, initialised BookGenreRecord
     */
    public BookGenreRecord(Long bookId, Long genreId) {
        super(BookGenre.BOOK_GENRE);

        setBookId(bookId);
        setGenreId(genreId);
    }

    /**
     * Create a detached, initialised BookGenreRecord
     */
    public BookGenreRecord(io.github.asm0dey.opdsko.jooq.tables.pojos.BookGenre value) {
        super(BookGenre.BOOK_GENRE);

        if (value != null) {
            setBookId(value.getBookId());
            setGenreId(value.getGenreId());
        }
    }
}
