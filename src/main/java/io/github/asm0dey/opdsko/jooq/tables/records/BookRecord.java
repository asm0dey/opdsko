/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.tables.records;


import io.github.asm0dey.opdsko.jooq.tables.Book;
import io.github.asm0dey.opdsko.jooq.tables.interfaces.IBook;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements IBook {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>book.id</code>.
     */
    public BookRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>book.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>book.path</code>.
     */
    public BookRecord setPath(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>book.path</code>.
     */
    @Override
    public String getPath() {
        return (String) get(1);
    }

    /**
     * Setter for <code>book.name</code>.
     */
    public BookRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>book.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>book.date</code>.
     */
    public BookRecord setDate(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>book.date</code>.
     */
    @Override
    public String getDate() {
        return (String) get(3);
    }

    /**
     * Setter for <code>book.added</code>.
     */
    public BookRecord setAdded(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>book.added</code>.
     */
    @Override
    public LocalDateTime getAdded() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>book.sequence</code>.
     */
    public BookRecord setSequence(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>book.sequence</code>.
     */
    @Override
    public String getSequence() {
        return (String) get(5);
    }

    /**
     * Setter for <code>book.sequence_number</code>.
     */
    public BookRecord setSequenceNumber(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>book.sequence_number</code>.
     */
    @Override
    public Integer getSequenceNumber() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>book.lang</code>.
     */
    public BookRecord setLang(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>book.lang</code>.
     */
    @Override
    public String getLang() {
        return (String) get(7);
    }

    /**
     * Setter for <code>book.zip_file</code>.
     */
    public BookRecord setZipFile(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>book.zip_file</code>.
     */
    @Override
    public String getZipFile() {
        return (String) get(8);
    }

    /**
     * Setter for <code>book.seqid</code>.
     */
    public BookRecord setSeqid(Integer value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>book.seqid</code>.
     */
    @Override
    public Integer getSeqid() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IBook from) {
        setId(from.getId());
        setPath(from.getPath());
        setName(from.getName());
        setDate(from.getDate());
        setAdded(from.getAdded());
        setSequence(from.getSequence());
        setSequenceNumber(from.getSequenceNumber());
        setLang(from.getLang());
        setZipFile(from.getZipFile());
        setSeqid(from.getSeqid());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Long id, String path, String name, String date, LocalDateTime added, String sequence, Integer sequenceNumber, String lang, String zipFile, Integer seqid) {
        super(Book.BOOK);

        setId(id);
        setPath(path);
        setName(name);
        setDate(date);
        setAdded(added);
        setSequence(sequence);
        setSequenceNumber(sequenceNumber);
        setLang(lang);
        setZipFile(zipFile);
        setSeqid(seqid);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(io.github.asm0dey.opdsko.jooq.tables.pojos.Book value) {
        super(Book.BOOK);

        if (value != null) {
            setId(value.getId());
            setPath(value.getPath());
            setName(value.getName());
            setDate(value.getDate());
            setAdded(value.getAdded());
            setSequence(value.getSequence());
            setSequenceNumber(value.getSequenceNumber());
            setLang(value.getLang());
            setZipFile(value.getZipFile());
            setSeqid(value.getSeqid());
            resetChangedOnNotNull();
        }
    }
}
