/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq


import io.github.asm0dey.opdsko.jooq.tables.Author
import io.github.asm0dey.opdsko.jooq.tables.AuthorsFts
import io.github.asm0dey.opdsko.jooq.tables.Book
import io.github.asm0dey.opdsko.jooq.tables.BookAuthor
import io.github.asm0dey.opdsko.jooq.tables.BookGenre
import io.github.asm0dey.opdsko.jooq.tables.BooksFts
import io.github.asm0dey.opdsko.jooq.tables.Genre

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>author</code>.
     */
    val AUTHOR: Author get() = Author.AUTHOR

    /**
     * The table <code>authors_fts</code>.
     */
    val AUTHORS_FTS: AuthorsFts get() = AuthorsFts.AUTHORS_FTS

    /**
     * The table <code>book</code>.
     */
    val BOOK: Book get() = Book.BOOK

    /**
     * The table <code>book_author</code>.
     */
    val BOOK_AUTHOR: BookAuthor get() = BookAuthor.BOOK_AUTHOR

    /**
     * The table <code>book_genre</code>.
     */
    val BOOK_GENRE: BookGenre get() = BookGenre.BOOK_GENRE

    /**
     * The table <code>books_fts</code>.
     */
    val BOOKS_FTS: BooksFts get() = BooksFts.BOOKS_FTS

    /**
     * The table <code>genre</code>.
     */
    val GENRE: Genre get() = Genre.GENRE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Author.AUTHOR,
        AuthorsFts.AUTHORS_FTS,
        Book.BOOK,
        BookAuthor.BOOK_AUTHOR,
        BookGenre.BOOK_GENRE,
        BooksFts.BOOKS_FTS,
        Genre.GENRE
    )
}
