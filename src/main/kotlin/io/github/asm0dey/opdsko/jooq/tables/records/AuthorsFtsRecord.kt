/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.tables.records


import io.github.asm0dey.opdsko.jooq.tables.AuthorsFts
import io.github.asm0dey.opdsko.jooq.tables.interfaces.IAuthorsFts

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class AuthorsFtsRecord private constructor() : TableRecordImpl<AuthorsFtsRecord>(AuthorsFts.AUTHORS_FTS), IAuthorsFts {

    open override var lastName: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open override var firstName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open override var middleName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open override var nickname: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IAuthorsFts) {
        this.lastName = from.lastName
        this.firstName = from.firstName
        this.middleName = from.middleName
        this.nickname = from.nickname
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised AuthorsFtsRecord
     */
    constructor(lastName: String?, firstName: String?, middleName: String?, nickname: String?): this() {
        this.lastName = lastName
        this.firstName = firstName
        this.middleName = middleName
        this.nickname = nickname
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised AuthorsFtsRecord
     */
    constructor(value: io.github.asm0dey.opdsko.jooq.tables.pojos.AuthorsFts?): this() {
        if (value != null) {
            this.lastName = value.lastName
            this.firstName = value.firstName
            this.middleName = value.middleName
            this.nickname = value.nickname
            resetChangedOnNotNull()
        }
    }
}
