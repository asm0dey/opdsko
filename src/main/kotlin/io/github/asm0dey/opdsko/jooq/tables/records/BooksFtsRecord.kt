/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.tables.records


import io.github.asm0dey.opdsko.jooq.tables.BooksFts
import io.github.asm0dey.opdsko.jooq.tables.interfaces.IBooksFts

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BooksFtsRecord private constructor() : TableRecordImpl<BooksFtsRecord>(BooksFts.BOOKS_FTS), IBooksFts {

    open override var name: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open override var sequence: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IBooksFts) {
        this.name = from.name
        this.sequence = from.sequence
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised BooksFtsRecord
     */
    constructor(name: String?, sequence: String?): this() {
        this.name = name
        this.sequence = sequence
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised BooksFtsRecord
     */
    constructor(value: io.github.asm0dey.opdsko.jooq.tables.pojos.BooksFts?): this() {
        if (value != null) {
            this.name = value.name
            this.sequence = value.sequence
            resetChangedOnNotNull()
        }
    }
}
