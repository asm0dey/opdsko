/*
 * This file is generated by jOOQ.
 */
package io.github.asm0dey.opdsko.jooq.tables.daos


import io.github.asm0dey.opdsko.jooq.tables.BookGenre
import io.github.asm0dey.opdsko.jooq.tables.records.BookGenreRecord

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.Record2
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class BookGenreDao(configuration: Configuration?) : DAOImpl<BookGenreRecord, io.github.asm0dey.opdsko.jooq.tables.pojos.BookGenre, Record2<Long?, Long?>>(BookGenre.BOOK_GENRE, io.github.asm0dey.opdsko.jooq.tables.pojos.BookGenre::class.java, configuration) {

    /**
     * Create a new BookGenreDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: io.github.asm0dey.opdsko.jooq.tables.pojos.BookGenre): Record2<Long?, Long?> = compositeKeyRecord(o.bookId, o.genreId)

    /**
     * Fetch records that have <code>book_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfBookId(lowerInclusive: Long, upperInclusive: Long): List<io.github.asm0dey.opdsko.jooq.tables.pojos.BookGenre> = fetchRange(BookGenre.BOOK_GENRE.BOOK_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    fun fetchByBookId(vararg values: Long): List<io.github.asm0dey.opdsko.jooq.tables.pojos.BookGenre> = fetch(BookGenre.BOOK_GENRE.BOOK_ID, *values.toTypedArray())

    /**
     * Fetch records that have <code>genre_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfGenreId(lowerInclusive: Long, upperInclusive: Long): List<io.github.asm0dey.opdsko.jooq.tables.pojos.BookGenre> = fetchRange(BookGenre.BOOK_GENRE.GENRE_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>genre_id IN (values)</code>
     */
    fun fetchByGenreId(vararg values: Long): List<io.github.asm0dey.opdsko.jooq.tables.pojos.BookGenre> = fetch(BookGenre.BOOK_GENRE.GENRE_ID, *values.toTypedArray())
}
